# ### This is a comment
# POST http://localhost:3000/auth/register
# Content-Type: application/json

# { "username": "newuser", "password": "password" }

# ### A second example, each request should be delimited by a triple hash
# GET http://localhost:3000/api/images

### ðŸŸ¢ Test 1: Register a valid user
POST http://localhost:3000/auth/register
Content-Type: application/json

{
    "username": "newuser",
    "password": "password"
}

### ðŸ”‘ Test 2: Login with correct credentials
POST http://localhost:3000/auth/login
Content-Type: application/json

{
    "username": "newuser",
    "password": "password"
}

### ðŸ”´ Test 3: Login with incorrect password
POST http://localhost:3000/auth/login
Content-Type: application/json

{
    "username": "newuser",
    "password": "wrongpassword"
}

### ðŸ”´ Test 4: Register with missing fields (expect 400)
POST http://localhost:3000/auth/register
Content-Type: application/json

{
    "username": "incompleteUser"
}

### ðŸ”´ Test 5: Register an existing user (expect 400)
POST http://localhost:3000/auth/register
Content-Type: application/json

{
    "username": "newuser",
    "password": "password"
}

### ðŸ”´ Test 6: Login with non-existing user
POST http://localhost:3000/auth/login
Content-Type: application/json

{
    "username": "unknownuser",
    "password": "password"
}

### get with newuser credentials

GET http://localhost:3000/api/hobbies
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImhlbGxvIiwiaWF0IjoxNzQyMjY5MTE0LCJleHAiOjE3NDIzNTU1MTR9.dnbIK6yCvpy4qgjnKGYeOZMQrsFHUuJg4jFFbM5Q6UM

### Insert Hobby Example
POST http://localhost:3000/api/hobbies
Authorization: Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImhlbGxvIiwiaWF0IjoxNzQyMjczMjczLCJleHAiOjE3NDIzNTk2NzN9.sp8HsPNUoDgv3tobPtUvbwdHDDLbanaCB8bkaQtcGZU
Content-Type: application/json

{
  "id": "nanoid_placeholder",
  "title": "The Double",
  "date": "2024-02-14",
  "hobbyType": "TV Show",
  "image": "./uploads/the-double",  // Replace with actual image URL or file path
  "rating": 5,
  "userId": "67d8c5a157c0437e429c5aa6"  // Replace with the toString() value of the _id
}

